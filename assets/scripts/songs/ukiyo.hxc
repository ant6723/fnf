import funkin.audio.FunkinSound;
import flixel.FlxG;
import funkin.graphics.FunkinSprite;
import flixel.FlxSprite;
import funkin.play.song.Song;
import funkin.play.PlayState;
import funkin.util.Constants;
import funkin.play.PlayStatePlaylist;
import funkin.Paths;
import flixel.util.FlxTimer;

class UkiyoSong extends Song {
  var hasPlayedCutscene:Bool;

	public function new() {
		super('ukiyo');
	}

  public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);

    if (!PlayStatePlaylist.isStoryMode) hasPlayedCutscene = true;

    if (!hasPlayedCutscene) {
      trace('Pausing countdown to play cutscene.');

      hasPlayedCutscene = true;

      startCutscene();
      event.cancel(); // CANCEL THE COUNTDOWN!
    }
	}

  function startCutscene() {
    trace('Hit start of song! Starting cutscene.');

    PlayState.instance.camHUD.visible = false;
    PlayState.instance.camCutscene.visible = true;
    
	new FlxTimer().start(0, function(tmr:FlxTimer){	
	PlayState.instance.currentStage.getDad().playAnimation('cut', true);
	FunkinSound.playOnce(Paths.sound('tapestuff'), 0.6);
	});
	
	new FlxTimer().start(2, function(tmr:FlxTimer){	
	PlayState.instance.currentStage.getBoyfriend().playAnimation('singUP', true);
	FunkinSound.playOnce(Paths.sound('dah'), 0.6);
	});
	
	new FlxTimer().start(4, function(tmr:FlxTimer){	 
	PlayState.instance.startCountdown();	
    });
  }

  /**
   * Don't replay the cutscene between restarts.
   */
  function onSongRetry(event:ScriptEvent)
  {
    super.onSongRetry(event);

    hasPlayedCutscene = true;
  }

  /**
   * Replay the cutscene after leaving the song.
   */
  function onCreate(event:ScriptEvent):Void
  {
    super.onCreate(event);

    hasPlayedCutscene = false;
  }

}
